/// Что такое функциональное программирование и какие особенности JS позволяют говорить о нем как о функциональном языке программирования?

/// Функциональное программирование — это декларативная концепция программирования или образец (паттерн) того, как строятся приложения, как используются функции, содержащие выражения, которые вычисляют значения без изменения аргументов, которые им передаются
/// Объект Array содержит методы map, filter и reduce, которые являются самыми известными функциями в мире функционального программирования из-за их полезности, а также потому, что они не изменяют массив, что делает эти функции «чистыми». Также в JS имеются замыкание и функции высшего порядка, которые являются характеристиками функционального языка программирования
/// Метод map возвращает новый массив с результатами вызова callback для каждого элемента массива:


const words = ['Functional', 'Procedural', 'Object-Oriented']

const wordsLength = words.map(word => word.length)

/// Метод filter создает новый массив со всеми элементами, которые удовлетворяют условию, указанному в callback:

// const data = {
//     {
//         name: 'Mark',
//         isRegistered: true
//     } {
//         name: 'Mary',
//         isRegistered: false
//     } {
//         name: 'Mae',
//         isRegistered: true
//     }
// }

// const registeredUsers = data.filter(user => user.isRegistered)


/// Метод reduce выполняет callback один раз для каждого элемента массива, за исключением пустот, принимая четыре аргумента: начальное значение (или значение от предыдущего callback), значение текущего элемента, текущий индекс и итерируемый массив:

// const strs = ['I', ' ', 'am', ' ', 'Iron', ' ', 'Man']

// const result = strs.reduce((acc, currentStr) => acc + str, '')

