/// В чем разница между spread-оператором и rest-оператором?

/// Операторы spread и rest имеют одинаковый синтаксис ("..."). Разница состоит в том, что с помощью spread мы передаем или распространяем данные массива на другие данные, а с помощью rest — получаем все параметры функции и помещаем их в массив (или извлекаем часть параметров).


// function add(a, b){
//     return a + b
// }

// const nums = [5, 6]
// const sum = add(...nums)
// console.log(sum) // 11


//// В этом примере мы используем spread при вызове функции add с данными массива nums. Значением переменной «a» будет 5, b = 6, sum = 11.

/// function add(...rest){
//     return rest.reduce((total, current) => total + current)
// }

// console.log(add(1, 2)) // 3
// console.log(add(1, 2, 3, 4, 5)) // 15

/// Здесь мы вызываем функцию add с любым количеством аргументов. Add возвращает сумму этих аргументов


const [first, ...others] = [1, 2, 3, 4, 5]
console.log(first) // 1
console.log(others) // [2, 3, 4, 5]



/// В этом примере мы используем rest для помещения любого количества параметров, кроме первого, в массив others
